; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=Workspace Whiz for Visual C++ 6
AppVerName=Workspace Whiz 4.2 Beta for Visual C++ 6 - Build 1206
AppVersion=4.2 Beta Build 1206
AppPublisher=Joshua Jensen
AppPublisherURL=http://workspacewhiz.com/
AppSupportURL=http://workspacewhiz.com/
AppUpdatesURL=http://workspacewhiz.com/
AppCopyright=Workspace Whiz 4.2 Beta for Visual C++ 6, Copyright © 1997-2008 Joshua Jensen
DefaultDirName={pf}\Workspace Whiz VC6
DefaultGroupName=Workspace Whiz for Visual C++ 6
DisableProgramGroupPage=yes
OutputBaseFilename=WorkspaceWhiz42_VC6_1206
OutputDir=.
PrivilegesRequired=admin
UsePreviousAppDir=yes

[Files]
Source: "..\Bin\WorkspaceWhiz.dll"; DestDir: "{app}"; Flags: regserver ignoreversion
Source: "..\Bin\WWhizInterfaceHelper.pkg"; DestDir: "{reg:HKLM\Software\Microsoft\VisualStudio\6.0\Setup,VsCommonDir}\MSDev98\Bin\IDE"; Flags: ignoreversion
Source: "..\Bin\WWhizInterface2.mod"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Bin\CTAGS.EXE"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Bin\ctags.conf"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Bin\WWhizReg.mod"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Bin\WWhizTemplateManager.mod"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Bin\WWhizTemplates.tpl"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Bin\WorkspaceWhiz.chm"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\Bin\Templates\*"; DestDir: "{app}\Templates"; Flags: ignoreversion
;Source: "..\Bin\TemplateCommands\WWhizPickDirTemplate.tpl"; DestDir: "{app}\TemplateCommands"; Flags: ignoreversion
;Source: ".\WWhizInterface40VC6_1206.exe"; DestDir: "{app}"; Flags: ignoreversion

[Registry]
Root: HKLM; Subkey: "Software\Workspace Whiz\VC6"; Flags: uninsdeletekeyifempty
Root: HKLM; Subkey: "Software\Workspace Whiz\VC6"; ValueType: string; ValueName: "Path"; ValueData: "{app}"
Root: HKCU; Subkey: "Software\Workspace Whiz\VC6"; Flags: uninsdeletekeyifempty
Root: HKCU; Subkey: "Software\Workspace Whiz\VC6\Config"; ValueType: dword; ValueName: "DS6FirstTime"; ValueData: "1"

[INI]
Filename: "{app}\WorkspaceWhiz.url"; Section: "InternetShortcut"; Key: "URL"; String: "http://workspacewhiz.com/"

[Icons]
Name: "{group}\Workspace Whiz Website"; Filename: "{app}\WorkspaceWhiz.url"
Name: "{group}\Workspace Whiz Help"; Filename: "{app}\WorkspaceWhiz.chm"
Name: "{group}\Uninstall Workspace Whiz"; Filename: "{uninstallexe}"

[Run]
;Filename: "{app}\WWhizInterface30VC6_1026.exe"

[UninstallDelete]
Type: files; Name: "{app}\WorkspaceWhiz.url"

[Code]
var
  installPath: String;

function InitializeSetup(): Boolean;
var
  uninstallRegKey: String;
  uninstallFileName: String;
  resultCode: Integer;
  quoteChar: Char;
  Ch : Char;
begin
  Result := True;
  quoteChar := Chr(34);

  while FindWindowByClassName('Afx:400000:8:10011:0:180565') <> 0 do
  begin
    if MsgBox('One or more copies of Visual Studio has been found running.  Please close it before proceeding.',
            mbError, MB_OKCANCEL) = IDCANCEL then
    begin
      Result := False;
      break;
    end;
  end;

  (* Check for pre 3.0 Workspace Whiz's. *)
  uninstallRegKey := 'SOFTWARE\Workspace Whiz!';
  RegQueryStringValue(HKLM, uninstallRegKey, 'Path', installPath);
  if installPath <> '' then
  begin
    uninstallFileName := installPath + '\UNWISE.EXE';
    if FileExists(uninstallFileName) then
    begin
      Exec(uninstallFileName, '/S install.log', installPath, SW_SHOWNORMAL, ewWaitUntilTerminated, resultCode);
    end;
    uninstallFileName := ''
  end;

  uninstallRegKey := 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Workspace Whiz for Visual C++ 6_is1';
  RegQueryStringValue(HKLM, uninstallRegKey, 'Inno Setup: App Path', installPath);
  RegQueryStringValue(HKLM, uninstallRegKey, 'UninstallString', uninstallFileName);
  if uninstallFileName <> '' then
  begin
    ch := StrGet(uninstallFileName, 1);
    uninstallFileName := Copy(uninstallFileName, 2, Length(uninstallFileName) - 2);

    if FileExists(uninstallFileName) then
    begin
      Exec(uninstallFileName, '/SILENT', '', SW_SHOWNORMAL, ewWaitUntilTerminated, resultCode);
    end
  end
end;

